apply plugin: 'java'
apply plugin: 'eclipse'

version = '1.0'


jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}

/* Additional JARs */
repositories {
    mavenCentral()
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
    testCompile 'org.testng:testng:' + '6.+'

	/* local project jars in own libs folder */
	//compoile fileTree(dir: 'libs', include: '*.jar')
}


uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

test {
    systemProperties 'property': 'value'
	useTestNG() {
		suiteXmlFiles << new File("src/test/resources/testing.xml")
	}
}

/* --- --- */

task wrapper(type: Wrapper) {
	gradleVersion = '4.2.1'
}

/* Verify all jar dependencies */
task listJars {
	configurations.compile.each {
		File file -> println file.name
	}
}

/* --- --- --- */

/*

Quelle-Ref: https://docs.gradle.org/current/dsl/org.gradle.api.tasks.testing.Test.html 

Quelle: https://docs.gradle.org/current/userguide/tutorial_gradle_command_line.html

task compile {
    doLast {
        println 'compiling source'
    }
}

task compileTest(dependsOn: compile) {
    doLast {
        println 'compiling unit tests'
    }
}

task test(dependsOn: [compile, compileTest]) {
    doLast {
        println 'running unit tests'
    }
}

task dist(dependsOn: [compile, test]) {
    doLast {
        println 'building the distribution'
    }
}


-->


> gradle dist test -x EXCLUDE_TASK_e.g__test
:compile
compiling source
:compileTest
compiling unit tests
:test
running unit tests
:dist
building the distribution

BUILD SUCCESSFUL in 0s
4 actionable tasks: 4 executed

*/
